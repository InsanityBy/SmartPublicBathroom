<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Output\STM32F401RE.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Output\STM32F401RE.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060960: Last Updated: Thu Jun 02 02:55:12 2022
<BR><P>
<H3>Maximum Stack Usage =        800 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; ShowerTerminal_CardTakeProcess &rArr; ShowerTerminal_GetZigBeeData &rArr; Communicate_ZigBeeTX &rArr; Communicate_ZigBeeCheck &rArr; Communicate_ZigBeeRX &rArr; ZigBee_ReceiveString
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[15]">DMA1_Stream0_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[15]">DMA1_Stream0_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[1c]">ADC_IRQHandler</a> from infraredobject.o(i.ADC_IRQHandler) referenced from startup_stm32f401xx.o(RESET)
 <LI><a href="#[4]">BusFault_Handler</a> from stm32f4xx_it.o(i.BusFault_Handler) referenced from startup_stm32f401xx.o(RESET)
 <LI><a href="#[15]">DMA1_Stream0_IRQHandler</a> from startup_stm32f401xx.o(.text) referenced from startup_stm32f401xx.o(RESET)
 <LI><a href="#[16]">DMA1_Stream1_IRQHandler</a> from startup_stm32f401xx.o(.text) referenced from startup_stm32f401xx.o(RESET)
 <LI><a href="#[17]">DMA1_Stream2_IRQHandler</a> from startup_stm32f401xx.o(.text) referenced from startup_stm32f401xx.o(RESET)
 <LI><a href="#[18]">DMA1_Stream3_IRQHandler</a> from startup_stm32f401xx.o(.text) referenced from startup_stm32f401xx.o(RESET)
 <LI><a href="#[19]">DMA1_Stream4_IRQHandler</a> from startup_stm32f401xx.o(.text) referenced from startup_stm32f401xx.o(RESET)
 <LI><a href="#[1a]">DMA1_Stream5_IRQHandler</a> from startup_stm32f401xx.o(.text) referenced from startup_stm32f401xx.o(RESET)
 <LI><a href="#[1b]">DMA1_Stream6_IRQHandler</a> from startup_stm32f401xx.o(.text) referenced from startup_stm32f401xx.o(RESET)
 <LI><a href="#[30]">DMA1_Stream7_IRQHandler</a> from startup_stm32f401xx.o(.text) referenced from startup_stm32f401xx.o(RESET)
 <LI><a href="#[34]">DMA2_Stream0_IRQHandler</a> from startup_stm32f401xx.o(.text) referenced from startup_stm32f401xx.o(RESET)
 <LI><a href="#[35]">DMA2_Stream1_IRQHandler</a> from startup_stm32f401xx.o(.text) referenced from startup_stm32f401xx.o(RESET)
 <LI><a href="#[36]">DMA2_Stream2_IRQHandler</a> from startup_stm32f401xx.o(.text) referenced from startup_stm32f401xx.o(RESET)
 <LI><a href="#[37]">DMA2_Stream3_IRQHandler</a> from startup_stm32f401xx.o(.text) referenced from startup_stm32f401xx.o(RESET)
 <LI><a href="#[38]">DMA2_Stream4_IRQHandler</a> from startup_stm32f401xx.o(.text) referenced from startup_stm32f401xx.o(RESET)
 <LI><a href="#[3a]">DMA2_Stream5_IRQHandler</a> from zigbee.o(i.DMA2_Stream5_IRQHandler) referenced from startup_stm32f401xx.o(RESET)
 <LI><a href="#[3b]">DMA2_Stream6_IRQHandler</a> from startup_stm32f401xx.o(.text) referenced from startup_stm32f401xx.o(RESET)
 <LI><a href="#[3c]">DMA2_Stream7_IRQHandler</a> from zigbee.o(i.DMA2_Stream7_IRQHandler) referenced from startup_stm32f401xx.o(RESET)
 <LI><a href="#[7]">DebugMon_Handler</a> from stm32f4xx_it.o(i.DebugMon_Handler) referenced from startup_stm32f401xx.o(RESET)
 <LI><a href="#[10]">EXTI0_IRQHandler</a> from startup_stm32f401xx.o(.text) referenced from startup_stm32f401xx.o(RESET)
 <LI><a href="#[2d]">EXTI15_10_IRQHandler</a> from startup_stm32f401xx.o(.text) referenced from startup_stm32f401xx.o(RESET)
 <LI><a href="#[11]">EXTI1_IRQHandler</a> from startup_stm32f401xx.o(.text) referenced from startup_stm32f401xx.o(RESET)
 <LI><a href="#[12]">EXTI2_IRQHandler</a> from infraredhuman.o(i.EXTI2_IRQHandler) referenced from startup_stm32f401xx.o(RESET)
 <LI><a href="#[13]">EXTI3_IRQHandler</a> from startup_stm32f401xx.o(.text) referenced from startup_stm32f401xx.o(RESET)
 <LI><a href="#[14]">EXTI4_IRQHandler</a> from startup_stm32f401xx.o(.text) referenced from startup_stm32f401xx.o(RESET)
 <LI><a href="#[1d]">EXTI9_5_IRQHandler</a> from button.o(i.EXTI9_5_IRQHandler) referenced from startup_stm32f401xx.o(RESET)
 <LI><a href="#[e]">FLASH_IRQHandler</a> from startup_stm32f401xx.o(.text) referenced from startup_stm32f401xx.o(RESET)
 <LI><a href="#[40]">FPU_IRQHandler</a> from startup_stm32f401xx.o(.text) referenced from startup_stm32f401xx.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from stm32f4xx_it.o(i.HardFault_Handler) referenced from startup_stm32f401xx.o(RESET)
 <LI><a href="#[26]">I2C1_ER_IRQHandler</a> from startup_stm32f401xx.o(.text) referenced from startup_stm32f401xx.o(RESET)
 <LI><a href="#[25]">I2C1_EV_IRQHandler</a> from startup_stm32f401xx.o(.text) referenced from startup_stm32f401xx.o(RESET)
 <LI><a href="#[28]">I2C2_ER_IRQHandler</a> from startup_stm32f401xx.o(.text) referenced from startup_stm32f401xx.o(RESET)
 <LI><a href="#[27]">I2C2_EV_IRQHandler</a> from startup_stm32f401xx.o(.text) referenced from startup_stm32f401xx.o(RESET)
 <LI><a href="#[3f]">I2C3_ER_IRQHandler</a> from startup_stm32f401xx.o(.text) referenced from startup_stm32f401xx.o(RESET)
 <LI><a href="#[3e]">I2C3_EV_IRQHandler</a> from startup_stm32f401xx.o(.text) referenced from startup_stm32f401xx.o(RESET)
 <LI><a href="#[3]">MemManage_Handler</a> from stm32f4xx_it.o(i.MemManage_Handler) referenced from startup_stm32f401xx.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from stm32f4xx_it.o(i.NMI_Handler) referenced from startup_stm32f401xx.o(RESET)
 <LI><a href="#[39]">OTG_FS_IRQHandler</a> from startup_stm32f401xx.o(.text) referenced from startup_stm32f401xx.o(RESET)
 <LI><a href="#[2f]">OTG_FS_WKUP_IRQHandler</a> from startup_stm32f401xx.o(.text) referenced from startup_stm32f401xx.o(RESET)
 <LI><a href="#[b]">PVD_IRQHandler</a> from startup_stm32f401xx.o(.text) referenced from startup_stm32f401xx.o(RESET)
 <LI><a href="#[8]">PendSV_Handler</a> from stm32f4xx_it.o(i.PendSV_Handler) referenced from startup_stm32f401xx.o(RESET)
 <LI><a href="#[f]">RCC_IRQHandler</a> from startup_stm32f401xx.o(.text) referenced from startup_stm32f401xx.o(RESET)
 <LI><a href="#[2e]">RTC_Alarm_IRQHandler</a> from startup_stm32f401xx.o(.text) referenced from startup_stm32f401xx.o(RESET)
 <LI><a href="#[d]">RTC_WKUP_IRQHandler</a> from startup_stm32f401xx.o(.text) referenced from startup_stm32f401xx.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_stm32f401xx.o(.text) referenced from startup_stm32f401xx.o(RESET)
 <LI><a href="#[31]">SDIO_IRQHandler</a> from startup_stm32f401xx.o(.text) referenced from startup_stm32f401xx.o(RESET)
 <LI><a href="#[29]">SPI1_IRQHandler</a> from startup_stm32f401xx.o(.text) referenced from startup_stm32f401xx.o(RESET)
 <LI><a href="#[2a]">SPI2_IRQHandler</a> from startup_stm32f401xx.o(.text) referenced from startup_stm32f401xx.o(RESET)
 <LI><a href="#[33]">SPI3_IRQHandler</a> from startup_stm32f401xx.o(.text) referenced from startup_stm32f401xx.o(RESET)
 <LI><a href="#[41]">SPI4_IRQHandler</a> from startup_stm32f401xx.o(.text) referenced from startup_stm32f401xx.o(RESET)
 <LI><a href="#[6]">SVC_Handler</a> from stm32f4xx_it.o(i.SVC_Handler) referenced from startup_stm32f401xx.o(RESET)
 <LI><a href="#[9]">SysTick_Handler</a> from stm32f4xx_it.o(i.SysTick_Handler) referenced from startup_stm32f401xx.o(RESET)
 <LI><a href="#[43]">SystemInit</a> from system_stm32f4xx.o(i.SystemInit) referenced from startup_stm32f401xx.o(.text)
 <LI><a href="#[c]">TAMP_STAMP_IRQHandler</a> from startup_stm32f401xx.o(.text) referenced from startup_stm32f401xx.o(RESET)
 <LI><a href="#[1e]">TIM1_BRK_TIM9_IRQHandler</a> from startup_stm32f401xx.o(.text) referenced from startup_stm32f401xx.o(RESET)
 <LI><a href="#[21]">TIM1_CC_IRQHandler</a> from startup_stm32f401xx.o(.text) referenced from startup_stm32f401xx.o(RESET)
 <LI><a href="#[20]">TIM1_TRG_COM_TIM11_IRQHandler</a> from startup_stm32f401xx.o(.text) referenced from startup_stm32f401xx.o(RESET)
 <LI><a href="#[1f]">TIM1_UP_TIM10_IRQHandler</a> from startup_stm32f401xx.o(.text) referenced from startup_stm32f401xx.o(RESET)
 <LI><a href="#[22]">TIM2_IRQHandler</a> from startup_stm32f401xx.o(.text) referenced from startup_stm32f401xx.o(RESET)
 <LI><a href="#[23]">TIM3_IRQHandler</a> from button.o(i.TIM3_IRQHandler) referenced from startup_stm32f401xx.o(RESET)
 <LI><a href="#[24]">TIM4_IRQHandler</a> from button.o(i.TIM4_IRQHandler) referenced from startup_stm32f401xx.o(RESET)
 <LI><a href="#[32]">TIM5_IRQHandler</a> from startup_stm32f401xx.o(.text) referenced from startup_stm32f401xx.o(RESET)
 <LI><a href="#[2b]">USART1_IRQHandler</a> from zigbee.o(i.USART1_IRQHandler) referenced from startup_stm32f401xx.o(RESET)
 <LI><a href="#[2c]">USART2_IRQHandler</a> from startup_stm32f401xx.o(.text) referenced from startup_stm32f401xx.o(RESET)
 <LI><a href="#[3d]">USART6_IRQHandler</a> from startup_stm32f401xx.o(.text) referenced from startup_stm32f401xx.o(RESET)
 <LI><a href="#[5]">UsageFault_Handler</a> from stm32f4xx_it.o(i.UsageFault_Handler) referenced from startup_stm32f401xx.o(RESET)
 <LI><a href="#[a]">WWDG_IRQHandler</a> from startup_stm32f401xx.o(.text) referenced from startup_stm32f401xx.o(RESET)
 <LI><a href="#[44]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_stm32f401xx.o(.text)
 <LI><a href="#[45]">_sputc</a> from printfa.o(i._sputc) referenced from printfa.o(i.__0sprintf)
 <LI><a href="#[42]">main</a> from main.o(i.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[44]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xx.o(.text)
</UL>
<P><STRONG><a name="[131]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[46]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[58]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[132]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[133]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[134]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[135]"></a>__rt_lib_shutdown_fini</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry12b.o(.ARM.Collect$$$$0000000E))

<P><STRONG><a name="[136]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[137]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$00000011))

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_stm32f401xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xx.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>DMA1_Stream0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Stream0_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Stream0_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xx.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>DMA1_Stream1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xx.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>DMA1_Stream2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xx.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>DMA1_Stream3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xx.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>DMA1_Stream4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xx.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>DMA1_Stream5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xx.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>DMA1_Stream6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xx.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>DMA1_Stream7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xx.o(RESET)
</UL>
<P><STRONG><a name="[34]"></a>DMA2_Stream0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xx.o(RESET)
</UL>
<P><STRONG><a name="[35]"></a>DMA2_Stream1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xx.o(RESET)
</UL>
<P><STRONG><a name="[36]"></a>DMA2_Stream2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xx.o(RESET)
</UL>
<P><STRONG><a name="[37]"></a>DMA2_Stream3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xx.o(RESET)
</UL>
<P><STRONG><a name="[38]"></a>DMA2_Stream4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xx.o(RESET)
</UL>
<P><STRONG><a name="[3b]"></a>DMA2_Stream6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xx.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>EXTI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xx.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>EXTI15_10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xx.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>EXTI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xx.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>EXTI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xx.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>EXTI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xx.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xx.o(RESET)
</UL>
<P><STRONG><a name="[40]"></a>FPU_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xx.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>I2C1_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xx.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>I2C1_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xx.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>I2C2_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xx.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>I2C2_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xx.o(RESET)
</UL>
<P><STRONG><a name="[3f]"></a>I2C3_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xx.o(RESET)
</UL>
<P><STRONG><a name="[3e]"></a>I2C3_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xx.o(RESET)
</UL>
<P><STRONG><a name="[39]"></a>OTG_FS_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xx.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>OTG_FS_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xx.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>PVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xx.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>RCC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xx.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>RTC_Alarm_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xx.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>RTC_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xx.o(RESET)
</UL>
<P><STRONG><a name="[31]"></a>SDIO_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xx.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xx.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xx.o(RESET)
</UL>
<P><STRONG><a name="[33]"></a>SPI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xx.o(RESET)
</UL>
<P><STRONG><a name="[41]"></a>SPI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xx.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>TAMP_STAMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xx.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>TIM1_BRK_TIM9_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xx.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>TIM1_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xx.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>TIM1_TRG_COM_TIM11_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xx.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>TIM1_UP_TIM10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xx.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>TIM2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xx.o(RESET)
</UL>
<P><STRONG><a name="[32]"></a>TIM5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xx.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>USART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xx.o(RESET)
</UL>
<P><STRONG><a name="[3d]"></a>USART6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xx.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xx.o(RESET)
</UL>
<P><STRONG><a name="[48]"></a>mktime</STRONG> (Thumb, 150 bytes, Stack size 16 bytes, mktime.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = mktime &rArr; _localtime
</UL>
<BR>[Calls]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_localtime
</UL>
<BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Information_GetTimeStamp
</UL>

<P><STRONG><a name="[80]"></a>__aeabi_memcpy</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, memcpya.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Communicate_ZigBeeTX
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Communicate_ZigBeeRX
</UL>

<P><STRONG><a name="[111]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_IRQHandler
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[138]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[7d]"></a>strstr</STRONG> (Thumb, 36 bytes, Stack size 12 bytes, strstr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = strstr
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Communicate_ZigBeeCheck
</UL>

<P><STRONG><a name="[78]"></a>strlen</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, strlen.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowerTerminal_DisplayContent
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Communicate_ZigBeeTX
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Communicate_ZigBeeConfig
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Communicate_Init
</UL>

<P><STRONG><a name="[77]"></a>strcpy</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, strcpy.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Communicate_ZigBeeTX
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Communicate_ZigBeeConfig
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Communicate_Init
</UL>

<P><STRONG><a name="[4a]"></a>__aeabi_dmul</STRONG> (Thumb, 228 bytes, Stack size 48 bytes, dmul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensor_GetTemperature
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[eb]"></a>__aeabi_f2d</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, f2d.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensor_GetTemperature
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowerTerminal_InUseProcess
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowerTerminal_CardTakeProcess
</UL>

<P><STRONG><a name="[4c]"></a>__aeabi_d2f</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, d2f.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_d2f
</UL>
<BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
</UL>
<BR>[Called By]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensor_GetTemperature
</UL>

<P><STRONG><a name="[139]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)

<P><STRONG><a name="[12c]"></a>__aeabi_uidivmod</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[4e]"></a>__aeabi_uldivmod</STRONG> (Thumb, 98 bytes, Stack size 40 bytes, uldiv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[49]"></a>_localtime</STRONG> (Thumb, 134 bytes, Stack size 8 bytes, localtime_i.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _localtime
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mktime
</UL>

<P><STRONG><a name="[13a]"></a>__I$use$fp</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, iusefp.o(.text), UNUSED)

<P><STRONG><a name="[4d]"></a>_float_round</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, fepilogue.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>

<P><STRONG><a name="[13b]"></a>_float_epilogue</STRONG> (Thumb, 92 bytes, Stack size 4 bytes, fepilogue.o(.text), UNUSED)

<P><STRONG><a name="[51]"></a>_double_round</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[4b]"></a>_double_epilogue</STRONG> (Thumb, 156 bytes, Stack size 32 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[52]"></a>__aeabi_dadd</STRONG> (Thumb, 322 bytes, Stack size 48 bytes, dadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_lasr
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[54]"></a>__aeabi_dsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[55]"></a>__aeabi_drsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[56]"></a>__aeabi_ddiv</STRONG> (Thumb, 222 bytes, Stack size 32 bytes, ddiv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[57]"></a>__aeabi_d2ulz</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, dfixul.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[129]"></a>__aeabi_cdrcmple</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, cdrcmple.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[47]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[13c]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[50]"></a>__aeabi_llsl</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, llshl.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
</UL>

<P><STRONG><a name="[13d]"></a>_ll_shift_l</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[4f]"></a>__aeabi_llsr</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, llushr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
</UL>

<P><STRONG><a name="[13e]"></a>_ll_ushift_r</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llushr.o(.text), UNUSED)

<P><STRONG><a name="[53]"></a>__aeabi_lasr</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, llsshr.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[13f]"></a>_ll_sshift_r</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llsshr.o(.text), UNUSED)

<P><STRONG><a name="[5c]"></a>ADC_ClearITPendingBit</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f4xx_adc.o(i.ADC_ClearITPendingBit))
<BR><BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>

<P><STRONG><a name="[c6]"></a>ADC_Cmd</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f4xx_adc.o(i.ADC_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfraredObject_GetValue
</UL>

<P><STRONG><a name="[bf]"></a>ADC_CommonInit</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, stm32f4xx_adc.o(i.ADC_CommonInit))
<BR><BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfraredObjectRX_Init
</UL>

<P><STRONG><a name="[59]"></a>ADC_DeInit</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, stm32f4xx_adc.o(i.ADC_DeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ADC_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphResetCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfraredObjectRX_Init
</UL>

<P><STRONG><a name="[5d]"></a>ADC_GetConversionValue</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f4xx_adc.o(i.ADC_GetConversionValue))
<BR><BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>

<P><STRONG><a name="[5b]"></a>ADC_GetITStatus</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, stm32f4xx_adc.o(i.ADC_GetITStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ADC_GetITStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>

<P><STRONG><a name="[1c]"></a>ADC_IRQHandler</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, infraredobject.o(i.ADC_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ADC_IRQHandler &rArr; ADC_GetITStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_GetITStatus
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_GetConversionValue
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_ClearITPendingBit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xx.o(RESET)
</UL>
<P><STRONG><a name="[c2]"></a>ADC_ITConfig</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, stm32f4xx_adc.o(i.ADC_ITConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ADC_ITConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfraredObjectRX_Init
</UL>

<P><STRONG><a name="[c0]"></a>ADC_Init</STRONG> (Thumb, 74 bytes, Stack size 12 bytes, stm32f4xx_adc.o(i.ADC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = ADC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfraredObjectRX_Init
</UL>

<P><STRONG><a name="[c1]"></a>ADC_RegularChannelConfig</STRONG> (Thumb, 184 bytes, Stack size 20 bytes, stm32f4xx_adc.o(i.ADC_RegularChannelConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = ADC_RegularChannelConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfraredObjectRX_Init
</UL>

<P><STRONG><a name="[c7]"></a>ADC_SoftwareStartConv</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f4xx_adc.o(i.ADC_SoftwareStartConv))
<BR><BR>[Called By]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfraredObject_GetValue
</UL>

<P><STRONG><a name="[5e]"></a>Audio_Play</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, audio.o(i.Audio_Play))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Audio_Play &rArr; Audio_Transmit16Bits &rArr; Audio_TransmitByte
</UL>
<BR>[Calls]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Audio_Transmit16Bits
</UL>
<BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM4_IRQHandler
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_IRQHandler
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowerTerminal_WaterStopRemind
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowerTerminal_NotUseProcess
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowerTerminal_NoReservationProcess
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowerTerminal_NearReservationEnd
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowerTerminal_CardTakeProcess
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowerTerminal_CardObjectLeft
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowerTerminal_CardFirstReadProcess
</UL>

<P><STRONG><a name="[5f]"></a>Audio_Transmit16Bits</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, audio.o(i.Audio_Transmit16Bits))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Audio_Transmit16Bits &rArr; Audio_TransmitByte
</UL>
<BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_ms
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Audio_TransmitByte
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Audio_Play
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Audio_Volume
</UL>

<P><STRONG><a name="[60]"></a>Audio_TransmitByte</STRONG> (Thumb, 108 bytes, Stack size 16 bytes, audio.o(i.Audio_TransmitByte))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Audio_TransmitByte
</UL>
<BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_us
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_ms
</UL>
<BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Audio_Transmit16Bits
</UL>

<P><STRONG><a name="[65]"></a>Audio_Volume</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, audio.o(i.Audio_Volume))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Audio_Volume &rArr; Audio_Transmit16Bits &rArr; Audio_TransmitByte
</UL>
<BR>[Calls]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Audio_Transmit16Bits
</UL>
<BR>[Called By]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowerTerminal_Init
</UL>

<P><STRONG><a name="[4]"></a>BusFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.BusFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xx.o(RESET)
</UL>
<P><STRONG><a name="[66]"></a>Button_Init</STRONG> (Thumb, 198 bytes, Stack size 24 bytes, button.o(i.Button_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = Button_Init &rArr; TIM4_Init &rArr; NVIC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_Init
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSCFG_EXTILineConfig
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM4_Init
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowerTerminal_Init
</UL>

<P><STRONG><a name="[6f]"></a>CalculateCRC</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, nfc.o(i.CalculateCRC))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = CalculateCRC &rArr; MFRC_SetBits &rArr; MFRC_WriteReg &rArr; SPI2_WriteReadByte
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MFRC_WriteReg
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MFRC_SetBits
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MFRC_ResetBits
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MFRC_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCD_Write
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCD_Select
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCD_Read
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCD_Halt
</UL>

<P><STRONG><a name="[74]"></a>Communicate_Init</STRONG> (Thumb, 84 bytes, Stack size 8 bytes, communicate.o(i.Communicate_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 584<LI>Call Chain = Communicate_Init &rArr; Communicate_ZigBeeConfig &rArr; Communicate_ZigBeeCheck &rArr; Communicate_ZigBeeRX &rArr; ZigBee_ReceiveString
</UL>
<BR>[Calls]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_s
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZigBee_TransmitString
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZigBee_Init
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Communicate_ZigBeeConfig
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Communicate_ZigBeeCheck
</UL>
<BR>[Called By]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowerTerminal_Init
</UL>

<P><STRONG><a name="[7a]"></a>Communicate_ZigBeeCheck</STRONG> (Thumb, 52 bytes, Stack size 264 bytes, communicate.o(i.Communicate_ZigBeeCheck))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = Communicate_ZigBeeCheck &rArr; Communicate_ZigBeeRX &rArr; ZigBee_ReceiveString
</UL>
<BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_ms
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Communicate_ZigBeeRX
</UL>
<BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Communicate_ZigBeeTX
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Communicate_ZigBeeConfig
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Communicate_Init
</UL>

<P><STRONG><a name="[7b]"></a>Communicate_ZigBeeConfig</STRONG> (Thumb, 374 bytes, Stack size 280 bytes, communicate.o(i.Communicate_ZigBeeConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 576<LI>Call Chain = Communicate_ZigBeeConfig &rArr; Communicate_ZigBeeCheck &rArr; Communicate_ZigBeeRX &rArr; ZigBee_ReceiveString
</UL>
<BR>[Calls]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_s
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZigBee_TransmitString
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Communicate_ZigBeeCheck
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Communicate_Init
</UL>

<P><STRONG><a name="[7c]"></a>Communicate_ZigBeeRX</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, communicate.o(i.Communicate_ZigBeeRX))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Communicate_ZigBeeRX &rArr; ZigBee_ReceiveString
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZigBee_ReceiveString
</UL>
<BR>[Called By]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowerTerminal_ZigBeeCheck
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowerTerminal_GetZigBeeData
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Communicate_ZigBeeCheck
</UL>

<P><STRONG><a name="[81]"></a>Communicate_ZigBeeTX</STRONG> (Thumb, 146 bytes, Stack size 288 bytes, communicate.o(i.Communicate_ZigBeeTX))
<BR><BR>[Stack]<UL><LI>Max Depth = 584<LI>Call Chain = Communicate_ZigBeeTX &rArr; Communicate_ZigBeeCheck &rArr; Communicate_ZigBeeRX &rArr; ZigBee_ReceiveString
</UL>
<BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZigBee_TransmitString
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Communicate_ZigBeeCheck
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowerTerminal_SendZigBeeData
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowerTerminal_GetZigBeeData
</UL>

<P><STRONG><a name="[3a]"></a>DMA2_Stream5_IRQHandler</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, zigbee.o(i.DMA2_Stream5_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = DMA2_Stream5_IRQHandler &rArr; DMA_GetITStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_GetITStatus
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Cmd
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ClearITPendingBit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xx.o(RESET)
</UL>
<P><STRONG><a name="[3c]"></a>DMA2_Stream7_IRQHandler</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, zigbee.o(i.DMA2_Stream7_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = DMA2_Stream7_IRQHandler &rArr; DMA_GetITStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_GetITStatus
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ClearITPendingBit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xx.o(RESET)
</UL>
<P><STRONG><a name="[83]"></a>DMA_ClearITPendingBit</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, stm32f4xx_dma.o(i.DMA_ClearITPendingBit))
<BR><BR>[Called By]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_DMATransmitInit
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_DMAReceiveInit
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2_Stream7_IRQHandler
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2_Stream5_IRQHandler
</UL>

<P><STRONG><a name="[84]"></a>DMA_Cmd</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f4xx_dma.o(i.DMA_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_DMAReceiveInit
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2_Stream5_IRQHandler
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZigBee_TransmitString
</UL>

<P><STRONG><a name="[11d]"></a>DMA_GetCurrDataCounter</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f4xx_dma.o(i.DMA_GetCurrDataCounter))
<BR><BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
</UL>

<P><STRONG><a name="[82]"></a>DMA_GetITStatus</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, stm32f4xx_dma.o(i.DMA_GetITStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = DMA_GetITStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2_Stream7_IRQHandler
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2_Stream5_IRQHandler
</UL>

<P><STRONG><a name="[11a]"></a>DMA_ITConfig</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, stm32f4xx_dma.o(i.DMA_ITConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DMA_ITConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_DMATransmitInit
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_DMAReceiveInit
</UL>

<P><STRONG><a name="[119]"></a>DMA_Init</STRONG> (Thumb, 82 bytes, Stack size 8 bytes, stm32f4xx_dma.o(i.DMA_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DMA_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_DMATransmitInit
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_DMAReceiveInit
</UL>

<P><STRONG><a name="[125]"></a>DMA_SetCurrDataCounter</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_dma.o(i.DMA_SetCurrDataCounter))
<BR><BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZigBee_TransmitString
</UL>

<P><STRONG><a name="[7]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.DebugMon_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xx.o(RESET)
</UL>
<P><STRONG><a name="[61]"></a>Delay_ms</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, delay.o(i.Delay_ms))
<BR><BR>[Called By]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfraredObject_GetValue
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_s
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowerTerminal_Init
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowerTerminal_CardTakeProcess
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowerTerminal_CardFirstReadProcess
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowerTerminal_ZigBeeCheck
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowerTerminal_SendZigBeeData
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZigBee_TransmitString
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZigBee_ReceiveString
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Communicate_ZigBeeCheck
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_Init
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Audio_TransmitByte
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Audio_Transmit16Bits
</UL>

<P><STRONG><a name="[75]"></a>Delay_s</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, delay.o(i.Delay_s))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Delay_s
</UL>
<BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_ms
</UL>
<BR>[Called By]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowerTerminal_WaterStopRemind
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowerTerminal_NotUseProcess
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowerTerminal_NoReservationProcess
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowerTerminal_NearReservationEnd
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowerTerminal_Init
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowerTerminal_InUseProcess
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowerTerminal_IdleState
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowerTerminal_CardObjectLeft
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Communicate_ZigBeeConfig
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Communicate_Init
</UL>

<P><STRONG><a name="[64]"></a>Delay_us</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, delay.o(i.Delay_us))
<BR><BR>[Called By]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfraredHuman_TransmitPulse
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfraredHuman_Transmit
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfraredHuman_Check
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfraredObject_GetValue
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensor_WriteBit
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensor_Reset
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensor_ReadBit
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensor_Check
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_TransmitByte
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Stop
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Start
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_CheckACK
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Audio_TransmitByte
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCD_Reset
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NFC_Init
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M500PcdConfigISOType
</UL>

<P><STRONG><a name="[85]"></a>Display_Clear</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, display.o(i.Display_Clear))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Display_Clear &rArr; I2C_TransmitDataCommand &rArr; I2C_TransmitByte
</UL>
<BR>[Calls]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_TransmitDataCommand
</UL>
<BR>[Called By]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowerTerminal_Init
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_Init
</UL>

<P><STRONG><a name="[87]"></a>Display_HardwareInit</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, display.o(i.Display_HardwareInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = Display_HardwareInit &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_Init
</UL>

<P><STRONG><a name="[88]"></a>Display_Init</STRONG> (Thumb, 224 bytes, Stack size 8 bytes, display.o(i.Display_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = Display_Init &rArr; Display_Clear &rArr; I2C_TransmitDataCommand &rArr; I2C_TransmitByte
</UL>
<BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_ms
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_TransmitDataCommand
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_HardwareInit
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_Clear
</UL>
<BR>[Called By]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowerTerminal_Init
</UL>

<P><STRONG><a name="[89]"></a>Display_SetPosition</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, display.o(i.Display_SetPosition))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Display_SetPosition &rArr; I2C_TransmitDataCommand &rArr; I2C_TransmitByte
</UL>
<BR>[Calls]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_TransmitDataCommand
</UL>
<BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_ShowChar
</UL>

<P><STRONG><a name="[8a]"></a>Display_ShowChar</STRONG> (Thumb, 178 bytes, Stack size 32 bytes, display.o(i.Display_ShowChar))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = Display_ShowChar &rArr; Display_SetPosition &rArr; I2C_TransmitDataCommand &rArr; I2C_TransmitByte
</UL>
<BR>[Calls]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_TransmitDataCommand
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_SetPosition
</UL>
<BR>[Called By]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowerTerminal_DisplayContent
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_ShowString
</UL>

<P><STRONG><a name="[8b]"></a>Display_ShowString</STRONG> (Thumb, 126 bytes, Stack size 32 bytes, display.o(i.Display_ShowString))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = Display_ShowString &rArr; Display_ShowChar &rArr; Display_SetPosition &rArr; I2C_TransmitDataCommand &rArr; I2C_TransmitByte
</UL>
<BR>[Calls]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_ShowChar
</UL>
<BR>[Called By]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowerTerminal_Init
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowerTerminal_DisplayContent
</UL>

<P><STRONG><a name="[12]"></a>EXTI2_IRQHandler</STRONG> (Thumb, 238 bytes, Stack size 8 bytes, infraredhuman.o(i.EXTI2_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = EXTI2_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_GetITStatus
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_ClearITPendingBit
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetCounter
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_GetCounter
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Cmd
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xx.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>EXTI9_5_IRQHandler</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, button.o(i.EXTI9_5_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = EXTI9_5_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_GetITStatus
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_ClearITPendingBit
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Cmd
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xx.o(RESET)
</UL>
<P><STRONG><a name="[8d]"></a>EXTI_ClearITPendingBit</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_exti.o(i.EXTI_ClearITPendingBit))
<BR><BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI2_IRQHandler
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI9_5_IRQHandler
</UL>

<P><STRONG><a name="[8c]"></a>EXTI_GetITStatus</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4xx_exti.o(i.EXTI_GetITStatus))
<BR><BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI2_IRQHandler
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI9_5_IRQHandler
</UL>

<P><STRONG><a name="[6b]"></a>EXTI_Init</STRONG> (Thumb, 142 bytes, Stack size 0 bytes, stm32f4xx_exti.o(i.EXTI_Init))
<BR><BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfraredHumanRX_Init
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Button_Init
</UL>

<P><STRONG><a name="[f7]"></a>FlowMeter_Clear</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, flowmeter.o(i.FlowMeter_Clear))
<BR><BR>[Called By]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowerTerminal_Init
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowerTerminal_CardTakeProcess
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowerTerminal_CardFirstReadProcess
</UL>

<P><STRONG><a name="[91]"></a>FlowMeter_GetValueL</STRONG> (Thumb, 24 bytes, Stack size 4 bytes, flowmeter.o(i.FlowMeter_GetValueL))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = FlowMeter_GetValueL
</UL>
<BR>[Calls]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlowMeter_GetValueR
</UL>
<BR>[Called By]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowerTerminal_InUseProcess
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowerTerminal_CardTakeProcess
</UL>

<P><STRONG><a name="[92]"></a>FlowMeter_GetValueR</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, flowmeter.o(i.FlowMeter_GetValueR))
<BR><BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlowMeter_GetValueL
</UL>

<P><STRONG><a name="[93]"></a>FlowMeter_Init</STRONG> (Thumb, 110 bytes, Stack size 24 bytes, flowmeter.o(i.FlowMeter_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = FlowMeter_Init &rArr; TIM_TIxExternalClockConfig &rArr; TI2_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TimeBaseInit
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TIxExternalClockConfig
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowerTerminal_Init
</UL>

<P><STRONG><a name="[98]"></a>FlowMeter_Start</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, flowmeter.o(i.FlowMeter_Start))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = FlowMeter_Start
</UL>
<BR>[Calls]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowerTerminal_CardFirstReadProcess
</UL>

<P><STRONG><a name="[99]"></a>FlowMeter_Stop</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, flowmeter.o(i.FlowMeter_Stop))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = FlowMeter_Stop
</UL>
<BR>[Calls]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowerTerminal_CardTakeProcess
</UL>

<P><STRONG><a name="[68]"></a>GPIO_Init</STRONG> (Thumb, 144 bytes, Stack size 20 bytes, stm32f4xx_gpio.o(i.GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfraredHumanTX_Init
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfraredHumanRX_Init
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfraredObjectTX_Init
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfraredObjectRX_Init
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Button_Init
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Valve_Init
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlowMeter_Init
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TemperatureSensor_Init
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pin_Output
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pin_Input
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZigBee_Init
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_HardwareInit
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NFC_PinInit
</UL>

<P><STRONG><a name="[94]"></a>GPIO_PinAFConfig</STRONG> (Thumb, 70 bytes, Stack size 20 bytes, stm32f4xx_gpio.o(i.GPIO_PinAFConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = GPIO_PinAFConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfraredHumanTX_Init
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlowMeter_Init
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZigBee_Init
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NFC_PinInit
</UL>

<P><STRONG><a name="[9c]"></a>GPIO_ReadInputDataBit</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_gpio.o(i.GPIO_ReadInputDataBit))
<BR><BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM4_IRQHandler
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_IRQHandler
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensor_ReadBit
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensor_Check
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_CheckACK
</UL>

<P><STRONG><a name="[62]"></a>GPIO_ResetBits</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_gpio.o(i.GPIO_ResetBits))
<BR><BR>[Called By]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfraredObject_GetValue
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Valve_Stop
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensor_WriteBit
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensor_Reset
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensor_ReadBit
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_TransmitByte
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Stop
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Start
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_CheckACK
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Audio_TransmitByte
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCD_Reset
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MFRC_WriteReg
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MFRC_ReadReg
</UL>

<P><STRONG><a name="[63]"></a>GPIO_SetBits</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_gpio.o(i.GPIO_SetBits))
<BR><BR>[Called By]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfraredHumanTX_Init
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfraredObject_GetValue
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Valve_Start
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TemperatureSensor_Init
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensor_WriteBit
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensor_Reset
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensor_ReadBit
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_TransmitByte
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Stop
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Start
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_CheckACK
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_HardwareInit
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Audio_TransmitByte
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCD_Reset
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NFC_PinInit
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NFC_Init
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MFRC_WriteReg
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MFRC_ReadReg
</UL>

<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.HardFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xx.o(RESET)
</UL>
<P><STRONG><a name="[9a]"></a>I2C_CheckACK</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, display.o(i.I2C_CheckACK))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = I2C_CheckACK &rArr; I2C_Stop
</UL>
<BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_us
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Stop
</UL>
<BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_TransmitDataCommand
</UL>

<P><STRONG><a name="[9d]"></a>I2C_Start</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, display.o(i.I2C_Start))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = I2C_Start
</UL>
<BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_TransmitDataCommand
</UL>

<P><STRONG><a name="[9b]"></a>I2C_Stop</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, display.o(i.I2C_Stop))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = I2C_Stop
</UL>
<BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_TransmitDataCommand
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_CheckACK
</UL>

<P><STRONG><a name="[9e]"></a>I2C_TransmitByte</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, display.o(i.I2C_TransmitByte))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = I2C_TransmitByte
</UL>
<BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_TransmitDataCommand
</UL>

<P><STRONG><a name="[86]"></a>I2C_TransmitDataCommand</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, display.o(i.I2C_TransmitDataCommand))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = I2C_TransmitDataCommand &rArr; I2C_TransmitByte
</UL>
<BR>[Calls]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_TransmitByte
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Stop
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Start
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_CheckACK
</UL>
<BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_ShowChar
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_SetPosition
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_Init
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_Clear
</UL>

<P><STRONG><a name="[9f]"></a>Information_GetDateTime</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, information.o(i.Information_GetDateTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Information_GetDateTime &rArr; RTC_GetTime
</UL>
<BR>[Calls]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetTime
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetDate
</UL>
<BR>[Called By]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowerTerminal_InitInformation
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Information_GetTimeStamp
</UL>

<P><STRONG><a name="[a2]"></a>Information_GetTimeStamp</STRONG> (Thumb, 66 bytes, Stack size 56 bytes, information.o(i.Information_GetTimeStamp))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = Information_GetTimeStamp &rArr; Information_GetDateTime &rArr; RTC_GetTime
</UL>
<BR>[Calls]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mktime
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Information_GetDateTime
</UL>
<BR>[Called By]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowerTerminal_GetZigBeeData
</UL>

<P><STRONG><a name="[a3]"></a>Information_InitializeRTC</STRONG> (Thumb, 160 bytes, Stack size 24 bytes, information.o(i.Information_InitializeRTC))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = Information_InitializeRTC &rArr; RTC_SetTime &rArr; RTC_WaitForSynchro
</UL>
<BR>[Calls]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWR_BackupAccessCmd
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_RTCCLKConfig
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_RTCCLKCmd
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_LSEConfig
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetFlagStatus
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_WriteProtectionCmd
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_WaitForSynchro
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetTime
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetDate
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Init
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_ExitInitMode
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_EnterInitMode
</UL>
<BR>[Called By]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowerTerminal_Init
</UL>

<P><STRONG><a name="[b0]"></a>Information_SetDateTime</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, information.o(i.Information_SetDateTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Information_SetDateTime &rArr; RTC_SetTime &rArr; RTC_WaitForSynchro
</UL>
<BR>[Calls]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWR_BackupAccessCmd
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetTime
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetDate
</UL>
<BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowerTerminal_SetDevice
</UL>

<P><STRONG><a name="[b1]"></a>InfraredHumanRX_Init</STRONG> (Thumb, 114 bytes, Stack size 24 bytes, infraredhuman.o(i.InfraredHumanRX_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = InfraredHumanRX_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_Init
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSCFG_EXTILineConfig
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfraredHuman_Init
</UL>

<P><STRONG><a name="[b2]"></a>InfraredHumanTX_Init</STRONG> (Thumb, 166 bytes, Stack size 48 bytes, infraredhuman.o(i.InfraredHumanTX_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = InfraredHumanTX_Init &rArr; GPIO_PinAFConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TimeBaseInit
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC1PreloadConfig
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC1Init
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_CtrlPWMOutputs
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfraredHuman_Init
</UL>

<P><STRONG><a name="[b6]"></a>InfraredHuman_Check</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, infraredhuman.o(i.InfraredHuman_Check))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = InfraredHuman_Check
</UL>
<BR>[Calls]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfraredHuman_Receive
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfraredHuman_GetValue
</UL>

<P><STRONG><a name="[b8]"></a>InfraredHuman_GetState</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, infraredhuman.o(i.InfraredHuman_GetState))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = InfraredHuman_GetState &rArr; InfraredHuman_GetValue &rArr; InfraredHuman_Transmit &rArr; InfraredHuman_TransmitPulse
</UL>
<BR>[Calls]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfraredHuman_GetValue
</UL>
<BR>[Called By]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowerTerminal_HumanDetect
</UL>

<P><STRONG><a name="[b9]"></a>InfraredHuman_GetValue</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, infraredhuman.o(i.InfraredHuman_GetValue))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = InfraredHuman_GetValue &rArr; InfraredHuman_Transmit &rArr; InfraredHuman_TransmitPulse
</UL>
<BR>[Calls]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfraredHuman_Transmit
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfraredHuman_Check
</UL>
<BR>[Called By]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfraredHuman_GetState
</UL>

<P><STRONG><a name="[bb]"></a>InfraredHuman_Init</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, infraredhuman.o(i.InfraredHuman_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = InfraredHuman_Init &rArr; InfraredHumanTX_Init &rArr; GPIO_PinAFConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM5_Init
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfraredHumanTX_Init
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfraredHumanRX_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowerTerminal_Init
</UL>

<P><STRONG><a name="[b7]"></a>InfraredHuman_Receive</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, infraredhuman.o(i.InfraredHuman_Receive))
<BR><BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfraredHuman_Check
</UL>

<P><STRONG><a name="[ba]"></a>InfraredHuman_Transmit</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, infraredhuman.o(i.InfraredHuman_Transmit))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = InfraredHuman_Transmit &rArr; InfraredHuman_TransmitPulse
</UL>
<BR>[Calls]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetCounter
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Cmd
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfraredHuman_TransmitPulse
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfraredHuman_GetValue
</UL>

<P><STRONG><a name="[bd]"></a>InfraredHuman_TransmitPulse</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, infraredhuman.o(i.InfraredHuman_TransmitPulse))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = InfraredHuman_TransmitPulse
</UL>
<BR>[Calls]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Cmd
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfraredHuman_Transmit
</UL>

<P><STRONG><a name="[be]"></a>InfraredObjectRX_Init</STRONG> (Thumb, 162 bytes, Stack size 56 bytes, infraredobject.o(i.InfraredObjectRX_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = InfraredObjectRX_Init &rArr; ADC_RegularChannelConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_RegularChannelConfig
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Init
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_ITConfig
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_DeInit
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_CommonInit
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfraredObject_Init
</UL>

<P><STRONG><a name="[c3]"></a>InfraredObjectTX_Init</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, infraredobject.o(i.InfraredObjectTX_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = InfraredObjectTX_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfraredObject_Init
</UL>

<P><STRONG><a name="[c4]"></a>InfraredObject_GetState</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, infraredobject.o(i.InfraredObject_GetState))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = InfraredObject_GetState &rArr; InfraredObject_GetValue
</UL>
<BR>[Calls]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfraredObject_GetValue
</UL>
<BR>[Called By]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowerTerminal_ObjectDetect
</UL>

<P><STRONG><a name="[c5]"></a>InfraredObject_GetValue</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, infraredobject.o(i.InfraredObject_GetValue))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = InfraredObject_GetValue
</UL>
<BR>[Calls]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_SoftwareStartConv
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Cmd
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_us
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_ms
</UL>
<BR>[Called By]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfraredObject_GetState
</UL>

<P><STRONG><a name="[c8]"></a>InfraredObject_Init</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, infraredobject.o(i.InfraredObject_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = InfraredObject_Init &rArr; InfraredObjectRX_Init &rArr; ADC_RegularChannelConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfraredObjectTX_Init
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfraredObjectRX_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowerTerminal_Init
</UL>

<P><STRONG><a name="[109]"></a>Int32toInt8</STRONG> (Thumb, 20 bytes, Stack size 12 bytes, userlibrary.o(i.Int32toInt8))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = Int32toInt8
</UL>
<BR>[Called By]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowerTerminal_SendZigBeeData
</UL>

<P><STRONG><a name="[fc]"></a>Int8toInt32</STRONG> (Thumb, 22 bytes, Stack size 12 bytes, userlibrary.o(i.Int8toInt32))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = Int8toInt32
</UL>
<BR>[Called By]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowerTerminal_GetZigBeeData
</UL>

<P><STRONG><a name="[fb]"></a>Int8toUint32</STRONG> (Thumb, 22 bytes, Stack size 12 bytes, userlibrary.o(i.Int8toUint32))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = Int8toUint32
</UL>
<BR>[Called By]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowerTerminal_GetZigBeeData
</UL>

<P><STRONG><a name="[c9]"></a>M500PcdConfigISOType</STRONG> (Thumb, 92 bytes, Stack size 8 bytes, nfc.o(i.M500PcdConfigISOType))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = M500PcdConfigISOType &rArr; PCD_AntennaOn &rArr; MFRC_SetBits &rArr; MFRC_WriteReg &rArr; SPI2_WriteReadByte
</UL>
<BR>[Calls]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_us
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCD_AntennaOn
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MFRC_WriteReg
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MFRC_ResetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NFC_Init
</UL>

<P><STRONG><a name="[cb]"></a>MFRC_CmdFrame</STRONG> (Thumb, 308 bytes, Stack size 48 bytes, nfc.o(i.MFRC_CmdFrame))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = MFRC_CmdFrame &rArr; MFRC_SetBits &rArr; MFRC_WriteReg &rArr; SPI2_WriteReadByte
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MFRC_WriteReg
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MFRC_SetBits
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MFRC_ResetBits
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MFRC_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCD_Write
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCD_Select
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCD_Request
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCD_Read
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCD_Halt
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCD_AuthState
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCD_Anticoll
</UL>

<P><STRONG><a name="[73]"></a>MFRC_ReadReg</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, nfc.o(i.MFRC_ReadReg))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = MFRC_ReadReg &rArr; SPI2_WriteReadByte
</UL>
<BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI2_WriteReadByte
</UL>
<BR>[Called By]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCD_Reset
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCD_AuthState
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCD_AntennaOn
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MFRC_SetBits
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MFRC_ResetBits
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MFRC_CmdFrame
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalculateCRC
</UL>

<P><STRONG><a name="[70]"></a>MFRC_ResetBits</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, nfc.o(i.MFRC_ResetBits))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = MFRC_ResetBits &rArr; MFRC_WriteReg &rArr; SPI2_WriteReadByte
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MFRC_WriteReg
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MFRC_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCD_Select
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCD_Request
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCD_Anticoll
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCD_AntennaOff
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MFRC_CmdFrame
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M500PcdConfigISOType
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalculateCRC
</UL>

<P><STRONG><a name="[72]"></a>MFRC_SetBits</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, nfc.o(i.MFRC_SetBits))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = MFRC_SetBits &rArr; MFRC_WriteReg &rArr; SPI2_WriteReadByte
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MFRC_WriteReg
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MFRC_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCD_Request
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCD_Anticoll
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCD_AntennaOn
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MFRC_CmdFrame
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalculateCRC
</UL>

<P><STRONG><a name="[71]"></a>MFRC_WriteReg</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, nfc.o(i.MFRC_WriteReg))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = MFRC_WriteReg &rArr; SPI2_WriteReadByte
</UL>
<BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI2_WriteReadByte
</UL>
<BR>[Called By]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCD_Reset
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCD_Request
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCD_Anticoll
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MFRC_SetBits
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MFRC_ResetBits
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MFRC_CmdFrame
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M500PcdConfigISOType
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalculateCRC
</UL>

<P><STRONG><a name="[3]"></a>MemManage_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.MemManage_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xx.o(RESET)
</UL>
<P><STRONG><a name="[cd]"></a>NFC_Init</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, nfc.o(i.NFC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = NFC_Init &rArr; M500PcdConfigISOType &rArr; PCD_AntennaOn &rArr; MFRC_SetBits &rArr; MFRC_WriteReg &rArr; SPI2_WriteReadByte
</UL>
<BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_us
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCD_Reset
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCD_AntennaOn
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCD_AntennaOff
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NFC_PinInit
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M500PcdConfigISOType
</UL>
<BR>[Called By]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowerTerminal_Init
</UL>

<P><STRONG><a name="[ce]"></a>NFC_PinInit</STRONG> (Thumb, 388 bytes, Stack size 32 bytes, nfc.o(i.NFC_PinInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = NFC_PinInit &rArr; GPIO_PinAFConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Init
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Cmd
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NFC_Init
</UL>

<P><STRONG><a name="[d3]"></a>NFC_ReadData</STRONG> (Thumb, 92 bytes, Stack size 32 bytes, nfc.o(i.NFC_ReadData))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = NFC_ReadData &rArr; PCD_AuthState &rArr; MFRC_CmdFrame &rArr; MFRC_SetBits &rArr; MFRC_WriteReg &rArr; SPI2_WriteReadByte
</UL>
<BR>[Calls]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCD_Select
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCD_Request
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCD_Read
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCD_Halt
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCD_AuthState
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCD_Anticoll
</UL>
<BR>[Called By]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowerTerminal_CardDetect
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NFC_SetCheckUserNumber
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NFC_SetCheckCardNumber
</UL>

<P><STRONG><a name="[da]"></a>NFC_SetCheckCardNumber</STRONG> (Thumb, 112 bytes, Stack size 40 bytes, nfc.o(i.NFC_SetCheckCardNumber))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = NFC_SetCheckCardNumber &rArr; NFC_WriteData &rArr; PCD_AuthState &rArr; MFRC_CmdFrame &rArr; MFRC_SetBits &rArr; MFRC_WriteReg &rArr; SPI2_WriteReadByte
</UL>
<BR>[Calls]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NFC_WriteData
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NFC_ReadData
</UL>
<BR>[Called By]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowerTerminal_CardFirstReadProcess
</UL>

<P><STRONG><a name="[dc]"></a>NFC_SetCheckUserNumber</STRONG> (Thumb, 112 bytes, Stack size 40 bytes, nfc.o(i.NFC_SetCheckUserNumber))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = NFC_SetCheckUserNumber &rArr; NFC_WriteData &rArr; PCD_AuthState &rArr; MFRC_CmdFrame &rArr; MFRC_SetBits &rArr; MFRC_WriteReg &rArr; SPI2_WriteReadByte
</UL>
<BR>[Calls]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NFC_WriteData
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NFC_ReadData
</UL>
<BR>[Called By]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowerTerminal_CardFirstReadProcess
</UL>

<P><STRONG><a name="[db]"></a>NFC_WriteData</STRONG> (Thumb, 92 bytes, Stack size 32 bytes, nfc.o(i.NFC_WriteData))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = NFC_WriteData &rArr; PCD_AuthState &rArr; MFRC_CmdFrame &rArr; MFRC_SetBits &rArr; MFRC_WriteReg &rArr; SPI2_WriteReadByte
</UL>
<BR>[Calls]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCD_Write
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCD_Select
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCD_Request
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCD_Halt
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCD_AuthState
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCD_Anticoll
</UL>
<BR>[Called By]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NFC_SetCheckUserNumber
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NFC_SetCheckCardNumber
</UL>

<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.NMI_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xx.o(RESET)
</UL>
<P><STRONG><a name="[6c]"></a>NVIC_Init</STRONG> (Thumb, 106 bytes, Stack size 16 bytes, misc.o(i.NVIC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = NVIC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfraredHumanRX_Init
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfraredObjectRX_Init
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM4_Init
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_Init
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Button_Init
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_Init
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_DMATransmitInit
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_DMAReceiveInit
</UL>

<P><STRONG><a name="[d0]"></a>PCD_AntennaOff</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, nfc.o(i.PCD_AntennaOff))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = PCD_AntennaOff &rArr; MFRC_ResetBits &rArr; MFRC_WriteReg &rArr; SPI2_WriteReadByte
</UL>
<BR>[Calls]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MFRC_ResetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NFC_Init
</UL>

<P><STRONG><a name="[ca]"></a>PCD_AntennaOn</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, nfc.o(i.PCD_AntennaOn))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = PCD_AntennaOn &rArr; MFRC_SetBits &rArr; MFRC_WriteReg &rArr; SPI2_WriteReadByte
</UL>
<BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MFRC_SetBits
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MFRC_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NFC_Init
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M500PcdConfigISOType
</UL>

<P><STRONG><a name="[d5]"></a>PCD_Anticoll</STRONG> (Thumb, 112 bytes, Stack size 48 bytes, nfc.o(i.PCD_Anticoll))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = PCD_Anticoll &rArr; MFRC_CmdFrame &rArr; MFRC_SetBits &rArr; MFRC_WriteReg &rArr; SPI2_WriteReadByte
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MFRC_WriteReg
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MFRC_SetBits
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MFRC_ResetBits
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MFRC_CmdFrame
</UL>
<BR>[Called By]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NFC_WriteData
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NFC_ReadData
</UL>

<P><STRONG><a name="[d7]"></a>PCD_AuthState</STRONG> (Thumb, 110 bytes, Stack size 56 bytes, nfc.o(i.PCD_AuthState))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = PCD_AuthState &rArr; MFRC_CmdFrame &rArr; MFRC_SetBits &rArr; MFRC_WriteReg &rArr; SPI2_WriteReadByte
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MFRC_ReadReg
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MFRC_CmdFrame
</UL>
<BR>[Called By]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NFC_WriteData
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NFC_ReadData
</UL>

<P><STRONG><a name="[d9]"></a>PCD_Halt</STRONG> (Thumb, 52 bytes, Stack size 40 bytes, nfc.o(i.PCD_Halt))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = PCD_Halt &rArr; MFRC_CmdFrame &rArr; MFRC_SetBits &rArr; MFRC_WriteReg &rArr; SPI2_WriteReadByte
</UL>
<BR>[Calls]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MFRC_CmdFrame
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalculateCRC
</UL>
<BR>[Called By]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NFC_WriteData
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NFC_ReadData
</UL>

<P><STRONG><a name="[d8]"></a>PCD_Read</STRONG> (Thumb, 86 bytes, Stack size 48 bytes, nfc.o(i.PCD_Read))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = PCD_Read &rArr; MFRC_CmdFrame &rArr; MFRC_SetBits &rArr; MFRC_WriteReg &rArr; SPI2_WriteReadByte
</UL>
<BR>[Calls]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MFRC_CmdFrame
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalculateCRC
</UL>
<BR>[Called By]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NFC_ReadData
</UL>

<P><STRONG><a name="[d4]"></a>PCD_Request</STRONG> (Thumb, 86 bytes, Stack size 48 bytes, nfc.o(i.PCD_Request))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = PCD_Request &rArr; MFRC_CmdFrame &rArr; MFRC_SetBits &rArr; MFRC_WriteReg &rArr; SPI2_WriteReadByte
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MFRC_WriteReg
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MFRC_SetBits
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MFRC_ResetBits
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MFRC_CmdFrame
</UL>
<BR>[Called By]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NFC_WriteData
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NFC_ReadData
</UL>

<P><STRONG><a name="[cf]"></a>PCD_Reset</STRONG> (Thumb, 142 bytes, Stack size 8 bytes, nfc.o(i.PCD_Reset))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = PCD_Reset &rArr; MFRC_WriteReg &rArr; SPI2_WriteReadByte
</UL>
<BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_us
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MFRC_WriteReg
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MFRC_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NFC_Init
</UL>

<P><STRONG><a name="[d6]"></a>PCD_Select</STRONG> (Thumb, 116 bytes, Stack size 48 bytes, nfc.o(i.PCD_Select))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = PCD_Select &rArr; MFRC_CmdFrame &rArr; MFRC_SetBits &rArr; MFRC_WriteReg &rArr; SPI2_WriteReadByte
</UL>
<BR>[Calls]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MFRC_ResetBits
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MFRC_CmdFrame
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalculateCRC
</UL>
<BR>[Called By]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NFC_WriteData
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NFC_ReadData
</UL>

<P><STRONG><a name="[dd]"></a>PCD_Write</STRONG> (Thumb, 150 bytes, Stack size 48 bytes, nfc.o(i.PCD_Write))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = PCD_Write &rArr; MFRC_CmdFrame &rArr; MFRC_SetBits &rArr; MFRC_WriteReg &rArr; SPI2_WriteReadByte
</UL>
<BR>[Calls]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MFRC_CmdFrame
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalculateCRC
</UL>
<BR>[Called By]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NFC_WriteData
</UL>

<P><STRONG><a name="[a4]"></a>PWR_BackupAccessCmd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_pwr.o(i.PWR_BackupAccessCmd))
<BR><BR>[Called By]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Information_SetDateTime
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Information_InitializeRTC
</UL>

<P><STRONG><a name="[8]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.PendSV_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xx.o(RESET)
</UL>
<P><STRONG><a name="[de]"></a>Pin_Input</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, temperaturesensor.o(i.Pin_Input))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = Pin_Input &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensor_ReadBit
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensor_Check
</UL>

<P><STRONG><a name="[df]"></a>Pin_Output</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, temperaturesensor.o(i.Pin_Output))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = Pin_Output &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensor_WriteBit
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensor_Reset
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensor_ReadBit
</UL>

<P><STRONG><a name="[67]"></a>RCC_AHB1PeriphClockCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(i.RCC_AHB1PeriphClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfraredHumanTX_Init
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfraredHumanRX_Init
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfraredObjectTX_Init
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfraredObjectRX_Init
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Button_Init
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Valve_Init
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlowMeter_Init
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TemperatureSensor_Init
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pin_Output
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pin_Input
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_DMATransmitInit
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_DMAReceiveInit
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZigBee_Init
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_HardwareInit
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NFC_PinInit
</UL>

<P><STRONG><a name="[95]"></a>RCC_APB1PeriphClockCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(i.RCC_APB1PeriphClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM5_Init
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM4_Init
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_Init
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlowMeter_Init
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Information_SetDateTime
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Information_InitializeRTC
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NFC_PinInit
</UL>

<P><STRONG><a name="[69]"></a>RCC_APB2PeriphClockCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(i.RCC_APB2PeriphClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfraredHumanTX_Init
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfraredHumanRX_Init
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfraredObjectRX_Init
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Button_Init
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_Init
</UL>

<P><STRONG><a name="[5a]"></a>RCC_APB2PeriphResetCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(i.RCC_APB2PeriphResetCmd))
<BR><BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_DeInit
</UL>

<P><STRONG><a name="[124]"></a>RCC_GetClocksFreq</STRONG> (Thumb, 214 bytes, Stack size 20 bytes, stm32f4xx_rcc.o(i.RCC_GetClocksFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = RCC_GetClocksFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
</UL>

<P><STRONG><a name="[a6]"></a>RCC_GetFlagStatus</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, stm32f4xx_rcc.o(i.RCC_GetFlagStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = RCC_GetFlagStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Information_InitializeRTC
</UL>

<P><STRONG><a name="[a5]"></a>RCC_LSEConfig</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(i.RCC_LSEConfig))
<BR><BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Information_InitializeRTC
</UL>

<P><STRONG><a name="[a8]"></a>RCC_RTCCLKCmd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(i.RCC_RTCCLKCmd))
<BR><BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Information_InitializeRTC
</UL>

<P><STRONG><a name="[a7]"></a>RCC_RTCCLKConfig</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(i.RCC_RTCCLKConfig))
<BR><BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Information_InitializeRTC
</UL>

<P><STRONG><a name="[ab]"></a>RTC_EnterInitMode</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, stm32f4xx_rtc.o(i.RTC_EnterInitMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = RTC_EnterInitMode
</UL>
<BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetTime
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetDate
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Init
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Information_InitializeRTC
</UL>

<P><STRONG><a name="[af]"></a>RTC_ExitInitMode</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f4xx_rtc.o(i.RTC_ExitInitMode))
<BR><BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetTime
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetDate
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Init
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Information_InitializeRTC
</UL>

<P><STRONG><a name="[a0]"></a>RTC_GetDate</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, stm32f4xx_rtc.o(i.RTC_GetDate))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = RTC_GetDate
</UL>
<BR>[Calls]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Bcd2ToByte
</UL>
<BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Information_GetDateTime
</UL>

<P><STRONG><a name="[a1]"></a>RTC_GetTime</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, stm32f4xx_rtc.o(i.RTC_GetTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = RTC_GetTime
</UL>
<BR>[Calls]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Bcd2ToByte
</UL>
<BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Information_GetDateTime
</UL>

<P><STRONG><a name="[ac]"></a>RTC_Init</STRONG> (Thumb, 94 bytes, Stack size 12 bytes, stm32f4xx_rtc.o(i.RTC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = RTC_Init &rArr; RTC_EnterInitMode
</UL>
<BR>[Calls]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_ExitInitMode
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_EnterInitMode
</UL>
<BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Information_InitializeRTC
</UL>

<P><STRONG><a name="[ad]"></a>RTC_SetDate</STRONG> (Thumb, 190 bytes, Stack size 24 bytes, stm32f4xx_rtc.o(i.RTC_SetDate))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = RTC_SetDate &rArr; RTC_WaitForSynchro
</UL>
<BR>[Calls]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_ByteToBcd2
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Bcd2ToByte
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_WaitForSynchro
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_ExitInitMode
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_EnterInitMode
</UL>
<BR>[Called By]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Information_SetDateTime
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Information_InitializeRTC
</UL>

<P><STRONG><a name="[ae]"></a>RTC_SetTime</STRONG> (Thumb, 198 bytes, Stack size 24 bytes, stm32f4xx_rtc.o(i.RTC_SetTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = RTC_SetTime &rArr; RTC_WaitForSynchro
</UL>
<BR>[Calls]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_ByteToBcd2
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Bcd2ToByte
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_WaitForSynchro
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_ExitInitMode
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_EnterInitMode
</UL>
<BR>[Called By]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Information_SetDateTime
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Information_InitializeRTC
</UL>

<P><STRONG><a name="[a9]"></a>RTC_WaitForSynchro</STRONG> (Thumb, 92 bytes, Stack size 8 bytes, stm32f4xx_rtc.o(i.RTC_WaitForSynchro))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = RTC_WaitForSynchro
</UL>
<BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetTime
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetDate
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Information_InitializeRTC
</UL>

<P><STRONG><a name="[aa]"></a>RTC_WriteProtectionCmd</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f4xx_rtc.o(i.RTC_WriteProtectionCmd))
<BR><BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Information_InitializeRTC
</UL>

<P><STRONG><a name="[cc]"></a>SPI2_WriteReadByte</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, nfc.o(i.SPI2_WriteReadByte))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SPI2_WriteReadByte
</UL>
<BR>[Calls]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_SendData
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_ReceiveData
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_GetFlagStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MFRC_WriteReg
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MFRC_ReadReg
</UL>

<P><STRONG><a name="[d1]"></a>SPI_Cmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f4xx_spi.o(i.SPI_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NFC_PinInit
</UL>

<P><STRONG><a name="[e2]"></a>SPI_I2S_GetFlagStatus</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_spi.o(i.SPI_I2S_GetFlagStatus))
<BR><BR>[Called By]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI2_WriteReadByte
</UL>

<P><STRONG><a name="[e4]"></a>SPI_I2S_ReceiveData</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_spi.o(i.SPI_I2S_ReceiveData))
<BR><BR>[Called By]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI2_WriteReadByte
</UL>

<P><STRONG><a name="[e3]"></a>SPI_I2S_SendData</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_spi.o(i.SPI_I2S_SendData))
<BR><BR>[Called By]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI2_WriteReadByte
</UL>

<P><STRONG><a name="[d2]"></a>SPI_Init</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, stm32f4xx_spi.o(i.SPI_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SPI_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NFC_PinInit
</UL>

<P><STRONG><a name="[6]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.SVC_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xx.o(RESET)
</UL>
<P><STRONG><a name="[6a]"></a>SYSCFG_EXTILineConfig</STRONG> (Thumb, 60 bytes, Stack size 12 bytes, stm32f4xx_syscfg.o(i.SYSCFG_EXTILineConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = SYSCFG_EXTILineConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfraredHumanRX_Init
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Button_Init
</UL>

<P><STRONG><a name="[e5]"></a>Sensor_Check</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, temperaturesensor.o(i.Sensor_Check))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = Sensor_Check &rArr; Pin_Input &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pin_Input
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TemperatureSensor_Init
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensor_GetTemperature
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensor_Convert
</UL>

<P><STRONG><a name="[e6]"></a>Sensor_Convert</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, temperaturesensor.o(i.Sensor_Convert))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = Sensor_Convert &rArr; Sensor_WriteByte &rArr; Sensor_WriteBit &rArr; Pin_Output &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensor_WriteByte
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensor_Reset
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensor_Check
</UL>
<BR>[Called By]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowerTerminal_InUseProcess
</UL>

<P><STRONG><a name="[e9]"></a>Sensor_GetTemperature</STRONG> (Thumb, 178 bytes, Stack size 40 bytes, temperaturesensor.o(i.Sensor_GetTemperature))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = Sensor_GetTemperature &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensor_WriteByte
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensor_Reset
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensor_ReadByte
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensor_Check
</UL>
<BR>[Called By]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowerTerminal_InUseProcess
</UL>

<P><STRONG><a name="[ec]"></a>Sensor_ReadBit</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, temperaturesensor.o(i.Sensor_ReadBit))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = Sensor_ReadBit &rArr; Pin_Output &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pin_Output
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pin_Input
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensor_ReadByte
</UL>

<P><STRONG><a name="[ea]"></a>Sensor_ReadByte</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, temperaturesensor.o(i.Sensor_ReadByte))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = Sensor_ReadByte &rArr; Sensor_ReadBit &rArr; Pin_Output &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensor_ReadBit
</UL>
<BR>[Called By]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensor_GetTemperature
</UL>

<P><STRONG><a name="[e7]"></a>Sensor_Reset</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, temperaturesensor.o(i.Sensor_Reset))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = Sensor_Reset &rArr; Pin_Output &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pin_Output
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TemperatureSensor_Init
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensor_GetTemperature
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensor_Convert
</UL>

<P><STRONG><a name="[ed]"></a>Sensor_WriteBit</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, temperaturesensor.o(i.Sensor_WriteBit))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = Sensor_WriteBit &rArr; Pin_Output &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pin_Output
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensor_WriteByte
</UL>

<P><STRONG><a name="[e8]"></a>Sensor_WriteByte</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, temperaturesensor.o(i.Sensor_WriteByte))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = Sensor_WriteByte &rArr; Sensor_WriteBit &rArr; Pin_Output &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensor_WriteBit
</UL>
<BR>[Called By]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensor_GetTemperature
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensor_Convert
</UL>

<P><STRONG><a name="[ee]"></a>ShowerTerminal_CardDetect</STRONG> (Thumb, 36 bytes, Stack size 32 bytes, userlibrary.o(i.ShowerTerminal_CardDetect))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = ShowerTerminal_CardDetect &rArr; NFC_ReadData &rArr; PCD_AuthState &rArr; MFRC_CmdFrame &rArr; MFRC_SetBits &rArr; MFRC_WriteReg &rArr; SPI2_WriteReadByte
</UL>
<BR>[Calls]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NFC_ReadData
</UL>
<BR>[Called By]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowerTerminal_TakeObjectProcess
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[12f]"></a>ShowerTerminal_CardFirstRead</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, userlibrary.o(i.ShowerTerminal_CardFirstRead))
<BR><BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[ef]"></a>ShowerTerminal_CardFirstReadProcess</STRONG> (Thumb, 132 bytes, Stack size 16 bytes, userlibrary.o(i.ShowerTerminal_CardFirstReadProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 752<LI>Call Chain = ShowerTerminal_CardFirstReadProcess &rArr; ShowerTerminal_GetZigBeeData &rArr; Communicate_ZigBeeTX &rArr; Communicate_ZigBeeCheck &rArr; Communicate_ZigBeeRX &rArr; ZigBee_ReceiveString
</UL>
<BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Audio_Play
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Valve_Start
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Valve_GetState
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlowMeter_Start
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlowMeter_Clear
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_ms
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowerTerminal_SetDevice
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowerTerminal_ReservationCheck
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowerTerminal_DisplayContent
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowerTerminal_SendZigBeeData
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowerTerminal_GetZigBeeData
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NFC_SetCheckUserNumber
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NFC_SetCheckCardNumber
</UL>
<BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[f8]"></a>ShowerTerminal_CardObjectLeft</STRONG> (Thumb, 50 bytes, Stack size 24 bytes, userlibrary.o(i.ShowerTerminal_CardObjectLeft))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = ShowerTerminal_CardObjectLeft &rArr; ShowerTerminal_DisplayContent &rArr; Display_ShowString &rArr; Display_ShowChar &rArr; Display_SetPosition &rArr; I2C_TransmitDataCommand &rArr; I2C_TransmitByte
</UL>
<BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Audio_Play
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_s
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowerTerminal_DisplayContent
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowerTerminal_TakeObjectProcess
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[130]"></a>ShowerTerminal_CardTake</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, userlibrary.o(i.ShowerTerminal_CardTake))
<BR><BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[f9]"></a>ShowerTerminal_CardTakeProcess</STRONG> (Thumb, 258 bytes, Stack size 40 bytes, userlibrary.o(i.ShowerTerminal_CardTakeProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 776<LI>Call Chain = ShowerTerminal_CardTakeProcess &rArr; ShowerTerminal_GetZigBeeData &rArr; Communicate_ZigBeeTX &rArr; Communicate_ZigBeeCheck &rArr; Communicate_ZigBeeRX &rArr; ZigBee_ReceiveString
</UL>
<BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Audio_Play
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Valve_Stop
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Valve_GetState
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlowMeter_Stop
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlowMeter_GetValueL
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlowMeter_Clear
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_ms
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowerTerminal_SetDevice
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowerTerminal_DisplayContent
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowerTerminal_SendZigBeeData
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowerTerminal_GetZigBeeData
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[f0]"></a>ShowerTerminal_DisplayContent</STRONG> (Thumb, 264 bytes, Stack size 56 bytes, userlibrary.o(i.ShowerTerminal_DisplayContent))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = ShowerTerminal_DisplayContent &rArr; Display_ShowString &rArr; Display_ShowChar &rArr; Display_SetPosition &rArr; I2C_TransmitDataCommand &rArr; I2C_TransmitByte
</UL>
<BR>[Calls]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Valve_GetState
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_ShowString
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_ShowChar
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM4_IRQHandler
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_IRQHandler
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowerTerminal_WaterStopRemind
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowerTerminal_NotUseProcess
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowerTerminal_NoReservationProcess
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowerTerminal_NearReservationEnd
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowerTerminal_InUseProcess
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowerTerminal_IdleState
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowerTerminal_CardTakeProcess
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowerTerminal_CardObjectLeft
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowerTerminal_CardFirstReadProcess
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[12e]"></a>ShowerTerminal_GetHelpState</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, userlibrary.o(i.ShowerTerminal_GetHelpState))
<BR><BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[114]"></a>ShowerTerminal_GetRepairState</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, userlibrary.o(i.ShowerTerminal_GetRepairState))
<BR><BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM4_IRQHandler
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[f2]"></a>ShowerTerminal_GetZigBeeData</STRONG> (Thumb, 336 bytes, Stack size 152 bytes, userlibrary.o(i.ShowerTerminal_GetZigBeeData))
<BR><BR>[Stack]<UL><LI>Max Depth = 736<LI>Call Chain = ShowerTerminal_GetZigBeeData &rArr; Communicate_ZigBeeTX &rArr; Communicate_ZigBeeCheck &rArr; Communicate_ZigBeeRX &rArr; ZigBee_ReceiveString
</UL>
<BR>[Calls]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Int8toUint32
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Int8toInt32
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Information_GetTimeStamp
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Communicate_ZigBeeTX
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Communicate_ZigBeeRX
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowerTerminal_CardTakeProcess
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowerTerminal_CardFirstReadProcess
</UL>

<P><STRONG><a name="[fd]"></a>ShowerTerminal_HumanDetect</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, userlibrary.o(i.ShowerTerminal_HumanDetect))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = ShowerTerminal_HumanDetect &rArr; InfraredHuman_GetState &rArr; InfraredHuman_GetValue &rArr; InfraredHuman_Transmit &rArr; InfraredHuman_TransmitPulse
</UL>
<BR>[Calls]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfraredHuman_GetState
</UL>
<BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[fe]"></a>ShowerTerminal_IdleState</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, userlibrary.o(i.ShowerTerminal_IdleState))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = ShowerTerminal_IdleState &rArr; ShowerTerminal_DisplayContent &rArr; Display_ShowString &rArr; Display_ShowChar &rArr; Display_SetPosition &rArr; I2C_TransmitDataCommand &rArr; I2C_TransmitByte
</UL>
<BR>[Calls]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_s
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowerTerminal_DisplayContent
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowerTerminal_TakeObjectProcess
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[ff]"></a>ShowerTerminal_InUseProcess</STRONG> (Thumb, 224 bytes, Stack size 40 bytes, userlibrary.o(i.ShowerTerminal_InUseProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = ShowerTerminal_InUseProcess &rArr; ShowerTerminal_DisplayContent &rArr; Display_ShowString &rArr; Display_ShowChar &rArr; Display_SetPosition &rArr; I2C_TransmitDataCommand &rArr; I2C_TransmitByte
</UL>
<BR>[Calls]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlowMeter_GetValueL
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensor_GetTemperature
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensor_Convert
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_s
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowerTerminal_DisplayContent
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[100]"></a>ShowerTerminal_Init</STRONG> (Thumb, 120 bytes, Stack size 24 bytes, userlibrary.o(i.ShowerTerminal_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 608<LI>Call Chain = ShowerTerminal_Init &rArr; Communicate_Init &rArr; Communicate_ZigBeeConfig &rArr; Communicate_ZigBeeCheck &rArr; Communicate_ZigBeeRX &rArr; ZigBee_ReceiveString
</UL>
<BR>[Calls]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfraredHuman_Init
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfraredObject_Init
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Button_Init
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Valve_Stop
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Valve_Init
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlowMeter_Init
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlowMeter_Clear
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TemperatureSensor_Init
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_s
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_ms
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowerTerminal_InitInformation
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Information_InitializeRTC
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Communicate_Init
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_ShowString
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_Init
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_Clear
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Audio_Volume
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NFC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[101]"></a>ShowerTerminal_InitInformation</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, userlibrary.o(i.ShowerTerminal_InitInformation))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = ShowerTerminal_InitInformation &rArr; Information_GetDateTime &rArr; RTC_GetTime
</UL>
<BR>[Calls]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Information_GetDateTime
</UL>
<BR>[Called By]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowerTerminal_Init
</UL>

<P><STRONG><a name="[104]"></a>ShowerTerminal_NearReservationEnd</STRONG> (Thumb, 174 bytes, Stack size 32 bytes, userlibrary.o(i.ShowerTerminal_NearReservationEnd))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = ShowerTerminal_NearReservationEnd &rArr; ShowerTerminal_DisplayContent &rArr; Display_ShowString &rArr; Display_ShowChar &rArr; Display_SetPosition &rArr; I2C_TransmitDataCommand &rArr; I2C_TransmitByte
</UL>
<BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Audio_Play
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_s
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowerTerminal_DisplayContent
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[105]"></a>ShowerTerminal_NoReservationProcess</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, userlibrary.o(i.ShowerTerminal_NoReservationProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = ShowerTerminal_NoReservationProcess &rArr; ShowerTerminal_DisplayContent &rArr; Display_ShowString &rArr; Display_ShowChar &rArr; Display_SetPosition &rArr; I2C_TransmitDataCommand &rArr; I2C_TransmitByte
</UL>
<BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Audio_Play
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_s
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowerTerminal_DisplayContent
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[106]"></a>ShowerTerminal_NotUseProcess</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, userlibrary.o(i.ShowerTerminal_NotUseProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = ShowerTerminal_NotUseProcess &rArr; ShowerTerminal_DisplayContent &rArr; Display_ShowString &rArr; Display_ShowChar &rArr; Display_SetPosition &rArr; I2C_TransmitDataCommand &rArr; I2C_TransmitByte
</UL>
<BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Audio_Play
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_s
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowerTerminal_DisplayContent
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[107]"></a>ShowerTerminal_ObjectDetect</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, userlibrary.o(i.ShowerTerminal_ObjectDetect))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ShowerTerminal_ObjectDetect &rArr; InfraredObject_GetState &rArr; InfraredObject_GetValue
</UL>
<BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfraredObject_GetState
</UL>
<BR>[Called By]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowerTerminal_TakeObjectProcess
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[12d]"></a>ShowerTerminal_ObjectLeftCheck</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, userlibrary.o(i.ShowerTerminal_ObjectLeftCheck))
<BR><BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[f4]"></a>ShowerTerminal_ReservationCheck</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, userlibrary.o(i.ShowerTerminal_ReservationCheck))
<BR><BR>[Called By]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowerTerminal_CardFirstReadProcess
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[f1]"></a>ShowerTerminal_SendZigBeeData</STRONG> (Thumb, 232 bytes, Stack size 136 bytes, userlibrary.o(i.ShowerTerminal_SendZigBeeData))
<BR><BR>[Stack]<UL><LI>Max Depth = 720<LI>Call Chain = ShowerTerminal_SendZigBeeData &rArr; Communicate_ZigBeeTX &rArr; Communicate_ZigBeeCheck &rArr; Communicate_ZigBeeRX &rArr; ZigBee_ReceiveString
</UL>
<BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_ms
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uint32toInt8
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowerTerminal_ZigBeeCheck
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Int32toInt8
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Communicate_ZigBeeTX
</UL>
<BR>[Called By]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowerTerminal_CardTakeProcess
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowerTerminal_CardFirstReadProcess
</UL>

<P><STRONG><a name="[f3]"></a>ShowerTerminal_SetDevice</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, userlibrary.o(i.ShowerTerminal_SetDevice))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = ShowerTerminal_SetDevice &rArr; Information_SetDateTime &rArr; RTC_SetTime &rArr; RTC_WaitForSynchro
</UL>
<BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Information_SetDateTime
</UL>
<BR>[Called By]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowerTerminal_CardTakeProcess
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowerTerminal_CardFirstReadProcess
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[113]"></a>ShowerTerminal_SetHelpState</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, userlibrary.o(i.ShowerTerminal_SetHelpState))
<BR><BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM4_IRQHandler
</UL>

<P><STRONG><a name="[110]"></a>ShowerTerminal_SetRepairState</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, userlibrary.o(i.ShowerTerminal_SetRepairState))
<BR><BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_IRQHandler
</UL>

<P><STRONG><a name="[10b]"></a>ShowerTerminal_TakeObjectProcess</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, userlibrary.o(i.ShowerTerminal_TakeObjectProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = ShowerTerminal_TakeObjectProcess &rArr; ShowerTerminal_CardDetect &rArr; NFC_ReadData &rArr; PCD_AuthState &rArr; MFRC_CmdFrame &rArr; MFRC_SetBits &rArr; MFRC_WriteReg &rArr; SPI2_WriteReadByte
</UL>
<BR>[Calls]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowerTerminal_ObjectDetect
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowerTerminal_IdleState
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowerTerminal_CardObjectLeft
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowerTerminal_CardDetect
</UL>
<BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[10c]"></a>ShowerTerminal_WaterStopRemind</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, userlibrary.o(i.ShowerTerminal_WaterStopRemind))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = ShowerTerminal_WaterStopRemind &rArr; ShowerTerminal_DisplayContent &rArr; Display_ShowString &rArr; Display_ShowChar &rArr; Display_SetPosition &rArr; I2C_TransmitDataCommand &rArr; I2C_TransmitByte
</UL>
<BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Audio_Play
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_s
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowerTerminal_DisplayContent
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[10a]"></a>ShowerTerminal_ZigBeeCheck</STRONG> (Thumb, 84 bytes, Stack size 136 bytes, userlibrary.o(i.ShowerTerminal_ZigBeeCheck))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = ShowerTerminal_ZigBeeCheck &rArr; Communicate_ZigBeeRX &rArr; ZigBee_ReceiveString
</UL>
<BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_ms
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Communicate_ZigBeeRX
</UL>
<BR>[Called By]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowerTerminal_SendZigBeeData
</UL>

<P><STRONG><a name="[9]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.SysTick_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xx.o(RESET)
</UL>
<P><STRONG><a name="[43]"></a>SystemInit</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, system_stm32f4xx.o(i.SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = SystemInit &rArr; SetSysClock
</UL>
<BR>[Calls]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClock
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xx.o(.text)
</UL>
<P><STRONG><a name="[23]"></a>TIM3_IRQHandler</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, button.o(i.TIM3_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = TIM3_IRQHandler &rArr; ShowerTerminal_DisplayContent &rArr; Display_ShowString &rArr; Display_ShowChar &rArr; Display_SetPosition &rArr; I2C_TransmitDataCommand &rArr; I2C_TransmitByte
</UL>
<BR>[Calls]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetCounter
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_GetITStatus
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Cmd
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ClearITPendingBit
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowerTerminal_SetRepairState
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Audio_Play
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowerTerminal_DisplayContent
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xx.o(RESET)
</UL>
<P><STRONG><a name="[6d]"></a>TIM3_Init</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, button.o(i.TIM3_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = TIM3_Init &rArr; NVIC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TimeBaseInit
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ITConfig
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Button_Init
</UL>

<P><STRONG><a name="[24]"></a>TIM4_IRQHandler</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, button.o(i.TIM4_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = TIM4_IRQHandler &rArr; ShowerTerminal_DisplayContent &rArr; Display_ShowString &rArr; Display_ShowChar &rArr; Display_SetPosition &rArr; I2C_TransmitDataCommand &rArr; I2C_TransmitByte
</UL>
<BR>[Calls]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetCounter
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_GetITStatus
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Cmd
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ClearITPendingBit
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowerTerminal_SetHelpState
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Audio_Play
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowerTerminal_GetRepairState
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowerTerminal_DisplayContent
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xx.o(RESET)
</UL>
<P><STRONG><a name="[6e]"></a>TIM4_Init</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, button.o(i.TIM4_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = TIM4_Init &rArr; NVIC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TimeBaseInit
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ITConfig
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Button_Init
</UL>

<P><STRONG><a name="[bc]"></a>TIM5_Init</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, infraredhuman.o(i.TIM5_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TIM5_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TimeBaseInit
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfraredHuman_Init
</UL>

<P><STRONG><a name="[10f]"></a>TIM_ClearITPendingBit</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_tim.o(i.TIM_ClearITPendingBit))
<BR><BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM4_IRQHandler
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_IRQHandler
</UL>

<P><STRONG><a name="[8f]"></a>TIM_Cmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f4xx_tim.o(i.TIM_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfraredHuman_TransmitPulse
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfraredHuman_Transmit
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI2_IRQHandler
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM4_IRQHandler
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_IRQHandler
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI9_5_IRQHandler
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlowMeter_Stop
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlowMeter_Start
</UL>

<P><STRONG><a name="[b5]"></a>TIM_CtrlPWMOutputs</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, stm32f4xx_tim.o(i.TIM_CtrlPWMOutputs))
<BR><BR>[Called By]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfraredHumanTX_Init
</UL>

<P><STRONG><a name="[8e]"></a>TIM_GetCounter</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_tim.o(i.TIM_GetCounter))
<BR><BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI2_IRQHandler
</UL>

<P><STRONG><a name="[10e]"></a>TIM_GetITStatus</STRONG> (Thumb, 34 bytes, Stack size 12 bytes, stm32f4xx_tim.o(i.TIM_GetITStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = TIM_GetITStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM4_IRQHandler
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_IRQHandler
</UL>

<P><STRONG><a name="[112]"></a>TIM_ITConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_tim.o(i.TIM_ITConfig))
<BR><BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM4_Init
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_Init
</UL>

<P><STRONG><a name="[b3]"></a>TIM_OC1Init</STRONG> (Thumb, 114 bytes, Stack size 16 bytes, stm32f4xx_tim.o(i.TIM_OC1Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TIM_OC1Init
</UL>
<BR>[Called By]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfraredHumanTX_Init
</UL>

<P><STRONG><a name="[b4]"></a>TIM_OC1PreloadConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_tim.o(i.TIM_OC1PreloadConfig))
<BR><BR>[Called By]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfraredHumanTX_Init
</UL>

<P><STRONG><a name="[117]"></a>TIM_SelectInputTrigger</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_tim.o(i.TIM_SelectInputTrigger))
<BR><BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TIxExternalClockConfig
</UL>

<P><STRONG><a name="[90]"></a>TIM_SetCounter</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_tim.o(i.TIM_SetCounter))
<BR><BR>[Called By]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfraredHuman_Transmit
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI2_IRQHandler
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM4_IRQHandler
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_IRQHandler
</UL>

<P><STRONG><a name="[97]"></a>TIM_TIxExternalClockConfig</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, stm32f4xx_tim.o(i.TIM_TIxExternalClockConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = TIM_TIxExternalClockConfig &rArr; TI2_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SelectInputTrigger
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TI2_Config
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TI1_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlowMeter_Init
</UL>

<P><STRONG><a name="[96]"></a>TIM_TimeBaseInit</STRONG> (Thumb, 104 bytes, Stack size 0 bytes, stm32f4xx_tim.o(i.TIM_TimeBaseInit))
<BR><BR>[Called By]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM5_Init
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfraredHumanTX_Init
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM4_Init
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_Init
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlowMeter_Init
</UL>

<P><STRONG><a name="[102]"></a>TemperatureSensor_Init</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, temperaturesensor.o(i.TemperatureSensor_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = TemperatureSensor_Init &rArr; Sensor_Reset &rArr; Pin_Output &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensor_Reset
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensor_Check
</UL>
<BR>[Called By]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowerTerminal_Init
</UL>

<P><STRONG><a name="[118]"></a>USART1_DMAReceiveInit</STRONG> (Thumb, 140 bytes, Stack size 72 bytes, zigbee.o(i.USART1_DMAReceiveInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = USART1_DMAReceiveInit &rArr; NVIC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Init
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ITConfig
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Cmd
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ClearITPendingBit
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZigBee_Init
</UL>

<P><STRONG><a name="[11b]"></a>USART1_DMATransmitInit</STRONG> (Thumb, 134 bytes, Stack size 72 bytes, zigbee.o(i.USART1_DMATransmitInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = USART1_DMATransmitInit &rArr; NVIC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Init
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ITConfig
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ClearITPendingBit
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZigBee_Init
</UL>

<P><STRONG><a name="[2b]"></a>USART1_IRQHandler</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, zigbee.o(i.USART1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = USART1_IRQHandler &rArr; USART_GetITStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_GetCurrDataCounter
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Cmd
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ReceiveData
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetITStatus
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xx.o(RESET)
</UL>
<P><STRONG><a name="[11f]"></a>USART1_Init</STRONG> (Thumb, 124 bytes, Stack size 24 bytes, zigbee.o(i.USART1_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = USART1_Init &rArr; USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ITConfig
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_DMACmd
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZigBee_Init
</UL>

<P><STRONG><a name="[123]"></a>USART_Cmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f4xx_usart.o(i.USART_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_Init
</UL>

<P><STRONG><a name="[122]"></a>USART_DMACmd</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_usart.o(i.USART_DMACmd))
<BR><BR>[Called By]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_Init
</UL>

<P><STRONG><a name="[11c]"></a>USART_GetITStatus</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, stm32f4xx_usart.o(i.USART_GetITStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = USART_GetITStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
</UL>

<P><STRONG><a name="[121]"></a>USART_ITConfig</STRONG> (Thumb, 74 bytes, Stack size 20 bytes, stm32f4xx_usart.o(i.USART_ITConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = USART_ITConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_Init
</UL>

<P><STRONG><a name="[120]"></a>USART_Init</STRONG> (Thumb, 204 bytes, Stack size 48 bytes, stm32f4xx_usart.o(i.USART_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetClocksFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_Init
</UL>

<P><STRONG><a name="[11e]"></a>USART_ReceiveData</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f4xx_usart.o(i.USART_ReceiveData))
<BR><BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
</UL>

<P><STRONG><a name="[108]"></a>Uint32toInt8</STRONG> (Thumb, 20 bytes, Stack size 12 bytes, userlibrary.o(i.Uint32toInt8))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = Uint32toInt8
</UL>
<BR>[Called By]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowerTerminal_SendZigBeeData
</UL>

<P><STRONG><a name="[5]"></a>UsageFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.UsageFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xx.o(RESET)
</UL>
<P><STRONG><a name="[f5]"></a>Valve_GetState</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, valve.o(i.Valve_GetState))
<BR><BR>[Called By]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowerTerminal_DisplayContent
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowerTerminal_CardTakeProcess
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowerTerminal_CardFirstReadProcess
</UL>

<P><STRONG><a name="[103]"></a>Valve_Init</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, valve.o(i.Valve_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = Valve_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowerTerminal_Init
</UL>

<P><STRONG><a name="[f6]"></a>Valve_Start</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, valve.o(i.Valve_Start))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Valve_Start
</UL>
<BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowerTerminal_CardFirstReadProcess
</UL>

<P><STRONG><a name="[fa]"></a>Valve_Stop</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, valve.o(i.Valve_Stop))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Valve_Stop
</UL>
<BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowerTerminal_Init
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowerTerminal_CardTakeProcess
</UL>

<P><STRONG><a name="[76]"></a>ZigBee_Init</STRONG> (Thumb, 124 bytes, Stack size 24 bytes, zigbee.o(i.ZigBee_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = ZigBee_Init &rArr; USART1_Init &rArr; USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_Init
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_DMATransmitInit
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_DMAReceiveInit
</UL>
<BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Communicate_Init
</UL>

<P><STRONG><a name="[7f]"></a>ZigBee_ReceiveString</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, zigbee.o(i.ZigBee_ReceiveString))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ZigBee_ReceiveString
</UL>
<BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_ms
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Communicate_ZigBeeRX
</UL>

<P><STRONG><a name="[79]"></a>ZigBee_TransmitString</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, zigbee.o(i.ZigBee_TransmitString))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ZigBee_TransmitString
</UL>
<BR>[Calls]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_SetCurrDataCounter
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Cmd
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_ms
</UL>
<BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Communicate_ZigBeeTX
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Communicate_ZigBeeConfig
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Communicate_Init
</UL>

<P><STRONG><a name="[126]"></a>__0sprintf</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sputc
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[140]"></a>__1sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf), UNUSED)

<P><STRONG><a name="[7e]"></a>__2sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowerTerminal_WaterStopRemind
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowerTerminal_NotUseProcess
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowerTerminal_NoReservationProcess
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowerTerminal_NearReservationEnd
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowerTerminal_InUseProcess
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowerTerminal_IdleState
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowerTerminal_DisplayContent
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowerTerminal_CardTakeProcess
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowerTerminal_CardObjectLeft
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowerTerminal_GetZigBeeData
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Communicate_ZigBeeTX
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Communicate_ZigBeeConfig
</UL>

<P><STRONG><a name="[141]"></a>__c89sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf), UNUSED)

<P><STRONG><a name="[142]"></a>sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf), UNUSED)

<P><STRONG><a name="[143]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[144]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[145]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[42]"></a>main</STRONG> (Thumb, 160 bytes, Stack size 24 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 800<LI>Call Chain = main &rArr; ShowerTerminal_CardTakeProcess &rArr; ShowerTerminal_GetZigBeeData &rArr; Communicate_ZigBeeTX &rArr; Communicate_ZigBeeCheck &rArr; Communicate_ZigBeeRX &rArr; ZigBee_ReceiveString
</UL>
<BR>[Calls]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowerTerminal_WaterStopRemind
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowerTerminal_TakeObjectProcess
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowerTerminal_SetDevice
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowerTerminal_ReservationCheck
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowerTerminal_ObjectLeftCheck
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowerTerminal_ObjectDetect
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowerTerminal_NotUseProcess
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowerTerminal_NoReservationProcess
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowerTerminal_NearReservationEnd
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowerTerminal_Init
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowerTerminal_InUseProcess
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowerTerminal_IdleState
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowerTerminal_HumanDetect
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowerTerminal_GetRepairState
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowerTerminal_GetHelpState
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowerTerminal_DisplayContent
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowerTerminal_CardTakeProcess
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowerTerminal_CardTake
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowerTerminal_CardObjectLeft
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowerTerminal_CardFirstReadProcess
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowerTerminal_CardFirstRead
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowerTerminal_CardDetect
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL><P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[10d]"></a>SetSysClock</STRONG> (Thumb, 216 bytes, Stack size 12 bytes, system_stm32f4xx.o(i.SetSysClock))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = SetSysClock
</UL>
<BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[e0]"></a>RTC_Bcd2ToByte</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f4xx_rtc.o(i.RTC_Bcd2ToByte))
<BR><BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetTime
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetDate
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetTime
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetDate
</UL>

<P><STRONG><a name="[e1]"></a>RTC_ByteToBcd2</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, stm32f4xx_rtc.o(i.RTC_ByteToBcd2))
<BR><BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetTime
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetDate
</UL>

<P><STRONG><a name="[116]"></a>TI1_Config</STRONG> (Thumb, 58 bytes, Stack size 20 bytes, stm32f4xx_tim.o(i.TI1_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = TI1_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TIxExternalClockConfig
</UL>

<P><STRONG><a name="[115]"></a>TI2_Config</STRONG> (Thumb, 80 bytes, Stack size 20 bytes, stm32f4xx_tim.o(i.TI2_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = TI2_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TIxExternalClockConfig
</UL>

<P><STRONG><a name="[128]"></a>_fp_digits</STRONG> (Thumb, 366 bytes, Stack size 64 bytes, printfa.o(i._fp_digits), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[127]"></a>_printf_core</STRONG> (Thumb, 1704 bytes, Stack size 136 bytes, printfa.o(i._printf_core), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>
<BR>[Called By]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sprintf
</UL>

<P><STRONG><a name="[12b]"></a>_printf_post_padding</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, printfa.o(i._printf_post_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[12a]"></a>_printf_pre_padding</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, printfa.o(i._printf_pre_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[45]"></a>_sputc</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, printfa.o(i._sputc))
<BR><BR>[Called By]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printfa.o(i.__0sprintf)
</UL><P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
